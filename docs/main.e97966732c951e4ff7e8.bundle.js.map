{"version":3,"file":"main.e97966732c951e4ff7e8.bundle.js","sources":["webpack:///./src/ui/Buttons.js"],"sourcesContent":["import React from \"react\";\n\nimport { css, Global } from \"@emotion/core\";\nimport { withTheme } from \"emotion-theming\";\n\nimport Button from \"../components/Button\";\nimport themes from \"../theme/themes\";\n\n// use HOC here since we want the theme to be passed in as prop not context\nconst ButtonWithTheme = withTheme(Button);\n\n// styles\nconst globalStyle = css`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n  }\n  /* More info: https://bit.ly/2PsCnzk */\n  * + * {\n    margin-top: 1rem;\n  }\n  html {\n    font-size: 62.5%;\n  }\n  html,\n  body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    color: #555;\n    font-family: Arial, Helvetica, sans-serif;\n    line-height: 1.6;\n\n    /* remove margin for the main div that Gatsby mounts into */\n    > div {\n      margin-top: 0;\n      width: 100%;\n      height: 100%;\n\n      > button {\n        margin: 0;\n        padding: 0;\n      }\n    }\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: inherit;\n    line-height: 1.1;\n    + * {\n      margin-top: 0.5rem;\n    }\n  }\n  strong {\n    color: #222;\n  }\n  li {\n    margin-top: 0.25rem;\n  }\n`;\n\nconst gridStyle = ({ backgroundColor, foregroundColor }) => css`\n  display: grid;\n  grid-template-columns: 1fr 3fr 1fr;\n  grid-template-rows: auto 1fr 1fr;\n  grid-template-areas: ${`\n  'header header header'\n  '. buttons .'\n  '. . .'`};\n  background: ${backgroundColor};\n  color: ${foregroundColor};\n  width: 100%;\n  height: 100%;\n  transition: 0.2s ease;\n  section {\n    position: relative;\n  }\n\n  h2 {\n    position: absolute;\n    top: 0px;\n    left: 0;\n    text-transform: uppercase;\n  }\n`;\n\nconst headerStyle = css`\n  grid-area: header;\n  padding: 30px;\n  border-bottom: 1px solid currentColor;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  > div {\n    margin-top: 0;\n\n    button {\n      margin: 0 4px;\n    }\n  }\n`;\n\nconst buttonWrapperStyle = css`\n  grid-area: buttons;\n  padding: 30px;\n  border-bottom: 1px solid currentColor;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-evenly;\n\n  > button {\n    flex: 0 1 calc(50% - 20px);\n    margin-top: 20px;\n  }\n`;\n\nfunction Buttons({ theme, setTheme }) {\n  return (\n    <>\n      <Global styles={globalStyle} />\n      <div css={gridStyle(theme)}>\n        <div css={headerStyle}>\n          <h1>Themes: </h1>\n          <div>\n            {Object.keys(themes).length > 0 &&\n              Object.keys(themes).map(key => (\n                <Button\n                  key={key}\n                  onClick={() => setTheme(themes[key])}\n                  size=\"small\"\n                >\n                  {key}\n                </Button>\n              ))}\n          </div>\n        </div>\n        <section css={buttonWrapperStyle}>\n          <h2>Buttons</h2>\n          <ButtonWithTheme>Default Button</ButtonWithTheme>\n          <ButtonWithTheme variant=\"secondary\">\n            Secondary Button\n          </ButtonWithTheme>\n          <ButtonWithTheme variant=\"accent1\">Accent1 Button</ButtonWithTheme>\n          <ButtonWithTheme variant=\"accent2\">Accent2 Button</ButtonWithTheme>\n          <ButtonWithTheme variant=\"accent3\">Accent3 Button</ButtonWithTheme>\n          <ButtonWithTheme variant=\"neutral\">Neutral Button</ButtonWithTheme>\n          <ButtonWithTheme size=\"medium\">Medium Button</ButtonWithTheme>\n          <ButtonWithTheme size=\"small\">Small Button</ButtonWithTheme>\n        </section>\n      </div>\n    </>\n  );\n}\n\nexport default Buttons;\n"],"mappings":"AASA","sourceRoot":""}